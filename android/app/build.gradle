def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "application.raybiztech.retailacademy"
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
//            shrinkResources false
//            minifyEnabled false
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "Instantiatable"
        checkReleaseBuilds false
        abortOnError false
    }

    packagingOptions {
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:multidex:1.0.3'
    implementation project(path: ':video_player_android')
//    implementation project(path: ':commonlib')
//    implementation project(path: ':mobilertc')
    implementation project(path: ':native_device_orientation')
    implementation project(path: ':wakelock')
    implementation project(path: ':permission_handler_android')
    implementation project(path: ':path_provider_android')
    implementation project(path: ':flutter_pdfview')
    implementation project(path: ':shared_preferences_android')
    implementation project(path: ':sqflite')
    implementation project(path: ':flutter_plugin_android_lifecycle')
    implementation project(path: ':image_picker_android')
    implementation project(path: ':auto_orientation')
    implementation project(path: ':audioplayers_android')
//    implementation "com.google.android.exoplayer:exoplayer-core:2.17.1"
//    implementation "com.google.android.exoplayer:exoplayer-ui:2.17.1"
    dependencies.add("default","com.google.android.exoplayer:exoplayer-core:2.17.1")
    dependencies.add("default","com.google.android.exoplayer:exoplayer-ui:2.17.1")
//    implementation project(':commonlib')
//    implementation project(':mobilertc')
}
